Index: app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".MainActivity\">\r\n\r\n    <TextView\r\n        android:id=\"@+id/title\"\r\n        android:layout_width=\"140dp\"\r\n        android:layout_height=\"76dp\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        android:layout_centerVertical=\"true\"\r\n        android:gravity=\"center_vertical|center_horizontal\"\r\n        android:text=\"@string/title\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.498\"\r\n        app:layout_constraintLeft_toLeftOf=\"parent\"\r\n        app:layout_constraintRight_toRightOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintVertical_bias=\"0.271\" />\r\n\r\n    <Button\r\n        android:id=\"@+id/playButton\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginBottom=\"224dp\"\r\n        android:text=\"@string/playButton\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.498\"\r\n        app:layout_constraintStart_toStartOf=\"parent\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/difficultyText\"\r\n        android:layout_width=\"58dp\"\r\n        android:layout_height=\"21dp\"\r\n        android:layout_marginStart=\"124dp\"\r\n        android:layout_marginLeft=\"124dp\"\r\n        android:text=\"@string/difficultyText\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/playButton\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/title\"\r\n        app:layout_constraintVertical_bias=\"0.62\" />\r\n\r\n    <Spinner\r\n        android:id=\"@+id/difficultySpinner\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:dropDownWidth=\"wrap_content\"\r\n        android:prompt=\"@string/difficultySpinner\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/playButton\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.176\"\r\n        app:layout_constraintStart_toEndOf=\"@+id/difficultyText\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/title\"\r\n        app:layout_constraintVertical_bias=\"0.614\" />\r\n\r\n    <Button\r\n        android:id=\"@+id/musicButton\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"@string/musicButton\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/playButton\"\r\n        app:layout_constraintVertical_bias=\"0.136\" />\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_main.xml	(revision c112844740d00a81f455fe7eddd66e305f722a74)
+++ app/src/main/res/layout/activity_main.xml	(date 1620720296461)
@@ -68,4 +68,15 @@
         app:layout_constraintTop_toBottomOf="@+id/playButton"
         app:layout_constraintVertical_bias="0.136" />
 
+    <Button
+        android:id="@+id/creditsButton"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="Credits"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/musicButton"
+        app:layout_constraintVertical_bias="0.19999999" />
+
 </androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/cs2450/swingsharp/PlayScreen.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package cs2450.swingsharp;\r\n\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.constraintlayout.widget.ConstraintLayout;\r\n\r\nimport android.content.DialogInterface;\r\nimport android.graphics.Color;\r\nimport android.os.Bundle;\r\nimport android.text.InputType;\r\nimport android.view.Gravity;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.GridView;\r\nimport android.widget.Spinner;\r\nimport android.widget.TableRow;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.io.BufferedReader;\r\nimport java.io.FileInputStream;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.FileOutputStream;\r\nimport java.io.IOException;\r\nimport java.io.InputStreamReader;\r\nimport java.io.PrintWriter;\r\nimport java.util.Arrays;\r\nimport java.util.Random;\r\n\r\npublic class PlayScreen extends AppCompatActivity {\r\n\r\n    String[] wordBank = new String[] {\r\n            \"Sheep\", \"Monkey\", \"Rooster\", \"Dog\", \"Boar\",\r\n            \"Rat\", \"Ox\", \"Tiger\", \"Rabbit\", \"Dragon\"};\r\n    int score = 0;\r\n    boolean secondCard = false;\r\n    boolean wrongPair = false;\r\n    String lastCard = \"\";\r\n    String username = \"\";\r\n    int difficulty;\r\n    Button[] cards;\r\n    Button[] incorrectPair = new Button[2];\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.play_screen);\r\n\r\n        cards = createCards();\r\n\r\n        //New Game Button code (Return to main screen)\r\n        Button newGameButton = findViewById(R.id.newGameButton);\r\n        newGameButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                score = 0;\r\n                finish();\r\n            }\r\n        });\r\n\r\n        //End Game Button code (show all answers)\r\n        Button endGameButton = findViewById(R.id.endGameButton);\r\n        endGameButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                for(Button button : cards){\r\n                    button.setTextColor(Color.WHITE);\r\n                }\r\n                //Prompt user to enter a name\r\n                AlertDialog.Builder builder = new AlertDialog.Builder(PlayScreen.this);\r\n                builder.setTitle(\"New Score! Please enter a name!\");\r\n\r\n                // Set up the input\r\n                final EditText input = new EditText(PlayScreen.this);\r\n                // Specify the type of input expected; this, for example, sets the input as a password, and will mask the text\r\n                input.setInputType(InputType.TYPE_CLASS_TEXT | InputType.TYPE_TEXT_VARIATION_NORMAL);\r\n                builder.setView(input);\r\n\r\n                // Set up the buttons\r\n                builder.setPositiveButton(\"OK\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        username = input.getText().toString();\r\n                        //send to highscores screen\r\n                        saveScore(score, username);\r\n                    }\r\n                });\r\n                builder.setNegativeButton(\"Cancel\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        dialog.cancel();\r\n                    }\r\n                });\r\n\r\n                builder.show();\r\n            }\r\n        });\r\n\r\n        //Try Again button code (Re-enables all buttons)\r\n        Button tryAgainButton = findViewById(R.id.tryAgainButton);\r\n        tryAgainButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if(wrongPair) {\r\n                    for (Button button : incorrectPair) {\r\n                        button.setTextColor(Color.TRANSPARENT);\r\n                    }\r\n                    for (Button button : cards) {\r\n                        button.setEnabled(true);\r\n                    }\r\n                    wrongPair = false;\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    //Creates buttons/Cards based on the difficulty\r\n    private Button[] createCards(){\r\n        score = 0;\r\n        Bundle extras = getIntent().getExtras();\r\n        if (extras != null) {\r\n            difficulty = extras.getInt(\"difficulty\");\r\n        }\r\n\r\n        TextView difficultyDebugText = findViewById(R.id.currentDifficultyText);\r\n        difficultyDebugText.setText(\"Difficulty: \" + difficulty + \" Cards\");\r\n\r\n        TableRow tablerow1 = (TableRow)findViewById(R.id.tablerow1);\r\n        TableRow tablerow2 = (TableRow)findViewById(R.id.tablerow2);\r\n        TableRow tablerow3 = (TableRow)findViewById(R.id.tablerow3);\r\n        TableRow tablerow4 = (TableRow)findViewById(R.id.tablerow4);\r\n        TableRow tablerow5 = (TableRow)findViewById(R.id.tablerow5);\r\n        TableRow.LayoutParams tlp = new TableRow.LayoutParams(TableRow.LayoutParams.MATCH_PARENT, TableRow.LayoutParams.WRAP_CONTENT);\r\n        tlp.gravity = Gravity.CENTER_HORIZONTAL;\r\n\r\n        //Creates an array of words used in the current game\r\n        Random r = new Random();\r\n        String[] chosenWords = new String[difficulty];\r\n        for (int i = 0; i < difficulty / 2; i++) {  //Ex: if 14 cards, pick out 7 names\r\n            chosenWords[i] = wordBank[i];\r\n            chosenWords[i+(difficulty/2)] = wordBank[i];\r\n        }\r\n\r\n        //Creates an X amount of cards based on the array of words (max of 5rows x 4col)\r\n        int tempNum;\r\n        Button[] cards = new Button[difficulty];\r\n        for(int i = 1; i <= difficulty; i++){\r\n            //First row\r\n            if(i >= 1 && i <= 4) {\r\n                Button button = new Button(this);\r\n                String word=null;\r\n                while(word==null){\r\n                    tempNum = r.nextInt(chosenWords.length);\r\n                    word = chosenWords[tempNum];\r\n                    chosenWords[tempNum] = null;\r\n                }\r\n                button.setText(word);\r\n                cards[i-1] = button;\r\n                createCardOnClick(button);\r\n                tablerow1.addView(button, tlp);\r\n            }\r\n            //Second row\r\n            if(i >= 5 && i <= 8){\r\n                Button button = new Button(this);\r\n                String word=null;\r\n                while(word==null){\r\n                    tempNum = r.nextInt(chosenWords.length);\r\n                    word = chosenWords[tempNum];\r\n                    chosenWords[tempNum] = null;\r\n                }\r\n                button.setText(word);\r\n                cards[i-1] = button;\r\n                createCardOnClick(button);\r\n                tablerow2.addView(button, tlp);\r\n            }\r\n            //Third row\r\n            if(i >= 9 && i <= 12){\r\n                Button button = new Button(this);\r\n                String word=null;\r\n                while(word==null){\r\n                    tempNum = r.nextInt(chosenWords.length);\r\n                    word = chosenWords[tempNum];\r\n                    chosenWords[tempNum] = null;\r\n                }\r\n                button.setText(word);\r\n                cards[i-1] = button;\r\n                createCardOnClick(button);\r\n                tablerow3.addView(button, tlp);\r\n            }\r\n            //Fourth row\r\n            if(i >= 13 && i <= 16){\r\n                Button button = new Button(this);\r\n                String word=null;\r\n                while(word==null){\r\n                    tempNum = r.nextInt(chosenWords.length);\r\n                    word = chosenWords[tempNum];\r\n                    chosenWords[tempNum] = null;\r\n                }\r\n                button.setText(word);\r\n                cards[i-1] = button;\r\n                createCardOnClick(button);\r\n                tablerow4.addView(button, tlp);\r\n            }\r\n            //Fifth row\r\n            if(i >= 17){\r\n                Button button = new Button(this);\r\n                String word=null;\r\n                while(word==null){\r\n                    tempNum = r.nextInt(chosenWords.length);\r\n                    word = chosenWords[tempNum];\r\n                    chosenWords[tempNum] = null;\r\n                }\r\n                button.setText(word);\r\n                cards[i-1] = button;\r\n                createCardOnClick(button);\r\n                tablerow5.addView(button, tlp);\r\n            }\r\n        }\r\n\r\n        return cards;\r\n\r\n    }\r\n\r\n    //Used to change score\r\n    private void addScore(int points){\r\n        TextView scoreText = findViewById(R.id.scoreText);\r\n        if(points < 0 && score == 0){\r\n            score += 0;\r\n        }\r\n        else if(score >= 0){\r\n            score += points;\r\n            scoreText.setText(\"Score: \" + score);\r\n        }\r\n    }\r\n\r\n    //Creates an onClick Listener on each button\r\n    private void createCardOnClick(Button button){\r\n        button.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                if(!secondCard){\r\n                    lastCard = button.getText().toString();\r\n                    button.setTextColor(Color.WHITE);\r\n                    button.setEnabled(false);\r\n                    secondCard = true;\r\n                    incorrectPair[0] = button;\r\n                }\r\n                else{\r\n                    if(button.getText().toString().equals(lastCard)){\r\n                        button.setTextColor(Color.WHITE);\r\n                        button.setEnabled(false);\r\n                        addScore(2);\r\n                        incorrectPair = new Button[2];\r\n                    }\r\n                    else{\r\n                        button.setTextColor(Color.WHITE);\r\n                        for(int j = 0; j < cards.length; j++){\r\n                            cards[j].setEnabled(false);\r\n                        }\r\n                        addScore(-1);\r\n                        incorrectPair[1] = button;\r\n                        wrongPair = true;\r\n                    }\r\n                    secondCard = false;\r\n                }\r\n\r\n            }\r\n        });\r\n        button.setTextColor(Color.TRANSPARENT);\r\n    }\r\n\r\n\r\n    /**\r\n     * Saves the score with the associated username\r\n     *\r\n     * @param score the score the player has\r\n     * @param name the username of the player\r\n     */\r\n    private void saveScore(int score, String name){\r\n        final String FILE_NAME = \"highscores.json\";\r\n        String input = null;\r\n        //Parse current JSON to get current scores.\r\n        FileInputStream fis = null;\r\n\r\n        //Read input from json file\r\n        try {\r\n            fis = openFileInput(FILE_NAME);\r\n            InputStreamReader isr = new InputStreamReader(fis);\r\n            BufferedReader br = new BufferedReader(isr);\r\n            input = br.readLine();\r\n        } catch (FileNotFoundException e) {\r\n            //File doesn't exist, create file.\r\n            FileOutputStream fos = null;\r\n            String baseText = \"{\\\"4-scores\\\":[],\\\"6-scores\\\":[],\\\"8-scores\\\":[],\\\"10-scores\\\":[],\" +\r\n                    \"\\\"12-scores\\\":[],\\\"14-scores\\\":[],\\\"16-scores\\\":[],\\\"18-scores\\\":[],\\\"20-scores\\\":[]}\";\r\n            try {\r\n                fos = openFileOutput(FILE_NAME, MODE_PRIVATE);\r\n                fos.write(baseText.getBytes());\r\n\r\n                Toast.makeText(this, \"Saved to \" + getFilesDir() + \"/\" + FILE_NAME, Toast.LENGTH_LONG).show();\r\n            } catch (FileNotFoundException fileNotFoundException) {\r\n                fileNotFoundException.printStackTrace();\r\n            } catch (IOException ioException) {\r\n                ioException.printStackTrace();\r\n            } finally{\r\n                try {\r\n                    fos.close();\r\n                } catch (IOException ioException) {\r\n                    ioException.printStackTrace();\r\n                }\r\n            }\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        } finally{\r\n            //Close input stream when done\r\n            try {\r\n                fis.close();\r\n            } catch (IOException e) {\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n\r\n        //Create new JSONObject\r\n        JSONObject jsonData = null;\r\n        try {\r\n            jsonData = new JSONObject(input);\r\n        } catch (JSONException e) {\r\n            e.printStackTrace();\r\n        }\r\n        //Add current score to JSON object\r\n        String query = String.format(\"%s-scores\", this.difficulty);\r\n        try {\r\n            jsonData.getJSONObject(String.format(\"%s-scores\", difficulty)).put(username, score);\r\n        } catch (JSONException e) {\r\n            e.printStackTrace();\r\n        }\r\n        //Remove all content from file\r\n        try {\r\n            PrintWriter pw = new PrintWriter(FILE_NAME);\r\n            pw.close();\r\n        } catch (FileNotFoundException e) {\r\n            e.printStackTrace();\r\n        }\r\n        //Write JSON string to file\r\n        FileOutputStream fos = null;\r\n        try {\r\n            fos = openFileOutput(FILE_NAME, MODE_PRIVATE);\r\n            fos.write(jsonData.toString().getBytes());\r\n\r\n            Toast.makeText(this, \"Saved to \" + getFilesDir() + \"/\" + FILE_NAME,\r\n                    Toast.LENGTH_LONG).show();\r\n        } catch (FileNotFoundException e) {\r\n            e.printStackTrace();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        } finally{\r\n            try {\r\n                fos.close();\r\n            } catch (IOException e) {\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/cs2450/swingsharp/PlayScreen.java	(revision c112844740d00a81f455fe7eddd66e305f722a74)
+++ app/src/main/java/cs2450/swingsharp/PlayScreen.java	(date 1620719939041)
@@ -87,6 +87,7 @@
                         username = input.getText().toString();
                         //send to highscores screen
                         saveScore(score, username);
+                        dialog.cancel();
                     }
                 });
                 builder.setNegativeButton("Cancel", new DialogInterface.OnClickListener() {
